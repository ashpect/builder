version: "3.7"

services:
  binary:
    image: metacall/builder_binary
    container_name: metacall_builder_binary
    build:
      context: .
      dockerfile: Dockerfile
      target: builder_binary
    entrypoint: /builder ${BUILDER_ARGS:-}

  rootless:
    image: metacall/builder_rootless
    container_name: metacall_builder_rootless
    build:
      context: .
      dockerfile: Dockerfile
      target: builder_rootless
    entrypoint: /home/user/builder.sh ${BUILDER_ARGS:-}
    # entrypoint:  /bin/sh -c "sleep infinity"
    environment:
      IMPORT_REGISTRY: ${IMPORT_REGISTRY:-testing}
      EXPORT_REGISTRY: ${EXPORT_REGISTRY:-testing}
    security_opt:
      - "seccomp=unconfined"
      - "apparmor=unconfined"
    # network_mode: "host"
    depends_on:
      registry:
        condition: service_healthy

  client:
    image: metacall/builder_client
    container_name: metacall_builder_client
    build:
      context: .
      dockerfile: Dockerfile
      target: builder_client
    entrypoint: /home/builder.sh ${BUILDER_ARGS:-}
    environment:
      IMPORT_REGISTRY: ${IMPORT_REGISTRY:-testing}
      EXPORT_REGISTRY: ${EXPORT_REGISTRY:-testing}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - buildkit:/run/user/1000/buildkit/buildkitd.sock
    depends_on:
      buildkit:
        condition: service_healthy
      registry:
        condition: service_healthy

  buildkit:
    image: moby/buildkit
    container_name: metacall_builder_buildkit
    restart: always
    privileged: true
    # volumes:
    #   - /var/run/docker.sock:/var/run/docker.sock
    #   - /run/containerd/containerd.sock:/run/containerd/containerd.sock
    #   - buildkit:/run/buildkit/buildkitd.sock
    healthcheck:
      test: buildctl debug workers
      interval: 10s
      timeout: 10s
      retries: 6
      start_period: 5s

  registry:
    image: registry:2.8
    container_name: metacall_builder_registry
    restart: always
    ports:
      - 5000:5000
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://registry:5000/v2/_catalog"]
      interval: 10s
      timeout: 10s
      retries: 6
      start_period: 10s
    volumes:
      - ./registry/config.yml:/etc/docker/registry/config.yml:ro
      - ./registry/data:/var/lib/registry:rw
